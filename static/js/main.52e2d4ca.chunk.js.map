{"version":3,"sources":["index.js"],"names":["renderer","marked","Renderer","link","href","title","text","MarkdownExample","props","getMarkdownText","bind","handleChange","state","input","e","this","setState","target","value","__html","breaks","id","onChange","dangerouslySetInnerHTML","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAyDA,IAAMA,EAAW,IAAIC,IAAOC,SAC5BF,EAASG,KAAO,SAAUC,EAAMC,EAAOC,GACrC,MAAM,4BAAN,OAAmCF,EAAnC,aAA4CE,EAA5C,S,IAGIC,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,MAAQ,CACXC,MAAO,EAAKL,MAAMK,OALJ,E,gDAQlB,SAAaC,GACbC,KAAKC,SAAS,CAACH,MAAMC,EAAEG,OAAOC,U,6BAE9B,SAAgBZ,GAEd,MAAO,CAAEa,OADOlB,IAAOK,EAAK,CAAEN,SAAUA,EAAUoB,QAAO,O,oBAG3D,WACE,OACE,iCACE,sBAAKC,GAAG,gBAAR,UACE,uBAAOA,GAAG,cAAV,oBACA,uBACA,0BAAUA,GAAG,SAASH,MAAOH,KAAKH,MAAMC,MAAOS,SAAUP,KAAKJ,kBAGhE,sBAAKU,GAAG,kBAAR,UACE,uBAAOA,GAAG,gBAAV,uBACA,qBAAKA,GAAG,UAAUE,wBAAyBR,KAAKN,gBAAgBM,KAAKH,MAAMC,mB,GA3BvDW,IAAMC,WAkCpCC,IAASC,OAAO,cAACpB,EAAD,CAAiBM,MArF5B,onCAqF6Ce,SAASC,eAAe,e","file":"static/js/main.52e2d4ca.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport marked from 'marked';\nimport './index.css';\n\n// const React = require('react')\n// const ReactDOM = require('react-dom')\n// const ReactMarkdown = require('react-markdown')\n\nvar input = '# This is a header\\n\\nAnd this is a paragraph';\n\ninput = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![JavaScript Logo](https://i.ibb.co/f1JXPVX/Java-Script.jpg)`;\n\n// ReactDOM.render(<ReactMarkdown source={input} />, document.getElementById('container'))\n\nconst renderer = new marked.Renderer();\nrenderer.link = function (href, title, text) {\n  return `<a target=\"_blank\" href=\"${href}\">${text}</a>`;\n};\n\nclass MarkdownExample extends React.Component {\n  constructor(props){\n    super(props);\n    this.getMarkdownText = this.getMarkdownText.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      input: this.props.input\n    }\n  }\n  handleChange(e){\n  this.setState({input:e.target.value});\n  }\n  getMarkdownText(text) {\n    var rawMarkup = marked(text,{ renderer: renderer, breaks:true});\n    return { __html: rawMarkup };\n  }\n  render() {\n    return (\n      <html>\n        <div id=\"input-section\">\n          <label id=\"input-label\">Editor</label>\n          <br/>\n          <textarea id=\"editor\" value={this.state.input} onChange={this.handleChange}>\n          </textarea>\n        </div>\n        <div id=\"preview-section\">\n          <label id=\"preview-label\">Previewer</label>\n          <div id=\"preview\" dangerouslySetInnerHTML={this.getMarkdownText(this.state.input)}></div>\n        </div>\n      </html>\n      );\n  }\n}\n\nReactDOM.render(<MarkdownExample input={input}/>, document.getElementById('container'))"],"sourceRoot":""}